{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","isLoading","setIsLoading","isError","setIsError","foundedMovie","setFoundedMovie","onSubmit","event","preventDefault","fetch","then","res","json","catch","error","Response","Error","getMovie","MovieData","Promise","reject","preparedMovieData","Title","Plot","Poster","imdbID","resolve","finally","htmlFor","type","id","placeholder","value","onChange","e","target","cn","disabled","onClick","App","setMovies","newMovie","some","moviesInList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f256abf.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { FormEvent, useState } from 'react';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [foundedMovie, setFoundedMovie] = useState<Movie | null>(null);\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    getMovie(query).then((MovieData) => {\n      if ('Error' in MovieData) {\n        return Promise.reject();\n      }\n\n      const preparedMovieData = {\n        title: MovieData.Title,\n        description: MovieData.Plot,\n        imgUrl: MovieData.Poster === 'N/A' ? (\n          'https://via.placeholder.com/360x270.png?text=no%20preview'\n        ) : (\n          MovieData.Poster\n        ),\n        imdbUrl: `https://www.imdb.com/title/${MovieData.imdbID}`,\n        imdbId: MovieData.imdbID,\n      };\n\n      setFoundedMovie(preparedMovieData);\n\n      return Promise.resolve();\n    })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleFilmAdding = () => {\n    if (foundedMovie) {\n      addMovie(foundedMovie);\n    }\n\n    setQuery('');\n    setFoundedMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(e) => {\n                setQuery(e.target.value);\n                setIsError(false);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              className={cn(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              type=\"submit\"\n              data-cy=\"searchButton\"\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {foundedMovie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleFilmAdding}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {foundedMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundedMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=c3173445';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch((error) => ({\n      Response: 'False',\n      Error: error,\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const addMovie = (newMovie: Movie) => {\n    const isMovieInList = movies\n      .some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!isMovieInList) {\n      setMovies(moviesInList => [...moviesInList, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}